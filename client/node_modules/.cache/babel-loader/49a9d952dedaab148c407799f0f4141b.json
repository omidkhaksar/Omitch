{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\dell\\\\Desktop\\\\my project\\\\React\\\\omitch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\dell\\\\Desktop\\\\my project\\\\React\\\\omitch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dell\\\\Desktop\\\\my project\\\\React\\\\omitch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport streams from '../apis/streams';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var userId, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = getState().auth.userId;\n              _context.next = 3;\n              return streams.post('/streams', _objectSpread({}, formValues, {\n                userId: userId\n              }));\n\n            case 3:\n              response = _context.sent;\n              dispatch({\n                type: CREATE_STREAM,\n                payload: response.data\n              });\n              history.push('/');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var fetchStreams = function fetchStreams() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return streams.get('/streams');\n\n            case 2:\n              response = _context2.sent;\n              dispatch({\n                type: FETCH_STREAMS,\n                payload: response.data\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var fetchStream = function fetchStream(id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return streams.get(\"/streams/\".concat(id));\n\n            case 2:\n              response = _context3.sent;\n              dispatch({\n                type: FETCH_STREAM,\n                payload: response.data\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var editStream = function editStream(id, formValues) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return streams.patch(\"/streams/\".concat(id), formValues);\n\n            case 2:\n              response = _context4.sent;\n              dispatch({\n                type: EDIT_STREAM,\n                payload: response.data\n              });\n              history.push('/');\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteStream = function deleteStream(id) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return streams.delete(\"/streams/\".concat(id));\n\n            case 2:\n              dispatch({\n                type: DELETE_STREAM,\n                payload: id\n              });\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/dell/Desktop/my project/React/omitch/client/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","post","response","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"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","sourcesContent":["import streams from '../apis/streams';\r\nimport history from '../history';\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  FETCH_STREAMS,\r\n  FETCH_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from './types';\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n  const { userId } = getState().auth;\r\n  const response = await streams.post('/streams', { ...formValues, userId });\r\n\r\n  dispatch({ type: CREATE_STREAM, payload: response.data });\r\n  history.push('/');\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n  const response = await streams.get('/streams');\r\n\r\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const fetchStream = id => async dispatch => {\r\n  const response = await streams.get(`/streams/${id}`);\r\n\r\n  dispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n  const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n  dispatch({ type: EDIT_STREAM, payload: response.data });\r\n  history.push('/');\r\n};\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n  await streams.delete(`/streams/${id}`);\r\n\r\n  dispatch({ type: DELETE_STREAM, payload: id });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}